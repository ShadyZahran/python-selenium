{"uid":"5e7080381dd22b08","name":"test_login_invalid_credentials[edge-john-invalid]","fullName":"tests.frontend.test_user_login#test_login_invalid_credentials","historyId":"d1785df214f0803254c103ae7c87e6f6","time":{"start":1737272974643,"stop":1737272976532,"duration":1889},"status":"failed","statusMessage":"AssertionError: assert 'An internal ... been logged.' == 'The username... be verified.'\n  \n  - The username and password could not be verified.\n  + An internal error has occurred and has been logged.","statusTrace":"username = 'john', password = 'invalid'\ntarget_driver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"f0806e5519d11f1c0804e1a496b3b48c\")>\n\n    @allure.feature(\"Login\")\n    @allure.story(\"E2E: Login with invalid credentials\")\n    @pytest.mark.parametrize(\"username, password\", [(\"john\", \"invalid\")])\n    def test_login_invalid_credentials(\n        username: str,\n        password: str,\n        target_driver: WebDriver,\n    ) -> None:\n        index_page = ParabankIndexPage(target_driver)\n        index_page.load()\n        index_page.login_section.login(username, password)\n    \n        error_message = index_page.get_text(index_page.login_section.ERROR_MESSAGE)\n>       assert error_message == index_page.login_section.error_message_invalid_credentials\nE       AssertionError: assert 'An internal ... been logged.' == 'The username... be verified.'\nE         \nE         - The username and password could not be verified.\nE         + An internal error has occurred and has been logged.\n\ntests/frontend/test_user_login.py:21: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver_factory","time":{"start":1737272939541,"stop":1737272939541,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"target_driver","time":{"start":1737272957619,"stop":1737272974643,"duration":17024},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 'An internal ... been logged.' == 'The username... be verified.'\n  \n  - The username and password could not be verified.\n  + An internal error has occurred and has been logged.","statusTrace":"username = 'john', password = 'invalid'\ntarget_driver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"f0806e5519d11f1c0804e1a496b3b48c\")>\n\n    @allure.feature(\"Login\")\n    @allure.story(\"E2E: Login with invalid credentials\")\n    @pytest.mark.parametrize(\"username, password\", [(\"john\", \"invalid\")])\n    def test_login_invalid_credentials(\n        username: str,\n        password: str,\n        target_driver: WebDriver,\n    ) -> None:\n        index_page = ParabankIndexPage(target_driver)\n        index_page.load()\n        index_page.login_section.login(username, password)\n    \n        error_message = index_page.get_text(index_page.login_section.ERROR_MESSAGE)\n>       assert error_message == index_page.login_section.error_message_invalid_credentials\nE       AssertionError: assert 'An internal ... been logged.' == 'The username... be verified.'\nE         \nE         - The username and password could not be verified.\nE         + An internal error has occurred and has been logged.\n\ntests/frontend/test_user_login.py:21: AssertionError","steps":[],"attachments":[{"uid":"a2e1a7bfd328de07","name":"log","source":"a2e1a7bfd328de07.txt","type":"text/plain","size":1201},{"uid":"f3d5d19874eed945","name":"stdout","source":"f3d5d19874eed945.txt","type":"text/plain","size":469},{"uid":"bf4acce2d2e4991a","name":"stderr","source":"bf4acce2d2e4991a.txt","type":"text/plain","size":415294}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"target_driver::0","time":{"start":1737272976535,"stop":1737272976664,"duration":129},"status":"passed","steps":[{"name":"Attaching screenshot","time":{"start":1737272976535,"stop":1737272976595,"duration":60},"status":"passed","steps":[],"attachments":[{"uid":"18da8e409f2c851","name":"test_test_login_invalid_credentials[edge-john-invalid]","source":"18da8e409f2c851.png","type":"image/png","size":87702}],"parameters":[{"name":"driver","value":"<selenium.webdriver.edge.webdriver.WebDriver (session=\"f0806e5519d11f1c0804e1a496b3b48c\")>"},{"name":"name","value":"'test_test_login_invalid_credentials[edge-john-invalid]'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},{"name":"driver_factory::0","time":{"start":1737272991209,"stop":1737272991209,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Login"},{"name":"story","value":"E2E: Login with invalid credentials"},{"name":"parentSuite","value":"tests.frontend"},{"name":"suite","value":"test_user_login"},{"name":"host","value":"fv-az1983-383"},{"name":"thread","value":"1958-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.frontend.test_user_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"password","value":"'invalid'"},{"name":"target_driver","value":"'edge'"},{"name":"username","value":"'john'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"5e7080381dd22b08.json","parameterValues":["'invalid'","'edge'","'john'"]}